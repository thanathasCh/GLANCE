1. Run scheulder job
    - [1] run every hour
    check if the process is already occured:
        if no:
        - [2] check if job is existed
            if exist:
                - given the an unprocessed video and location_id
                - check if location's features is in db
                    if in:
                        - load features from locaiton_id
                    else:
                        - ignore
                - slice video into images
                for each image:
                    - product detection
                    for each product:
                        - search product from the features
                        - append to the list along with coordination
                - append to the database (image and its information)
                - Goto [2]
            else:
                stay idel
        else:
            ignore

2. Restart automatically if server is down and save error to log file -- solved with sentry

3. Api to return the log information

5. Add/Update new images
    - given the list of image_ids
    - fetch the images 
    - feature extraction
    - save into the local db

6. Delete images
    - given the list of image_ids
    - remove from the local db

-- TODO --
[x] - auto restart
[x] - auto log -- solved with sentry
[x] - api to display log -- solved with sentry
[] - scheulder process 
[] - api to fetch video
[] - process checking
[] - video slicing
[] - product detection with gpu on cloud
[] - CRUD product features
[] - append images and their information to the database
[] - Api for CRUD local db when the product image is updated
[] - api to fetch images